{"version":3,"sources":["components/feedback/feedback.js","App.js","index.js"],"names":["Feedback","state","good","neutral","bad","addFeedback","event","value","target","textContent","toLowerCase","setState","prevState","Object","values","this","reduce","acc","val","console","log","goodAndBad","Math","round","className","type","onClick","countTotalFeedback","countPositivePercent","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEMA,E,4MACFC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTC,YAAc,SAAAC,GACV,IAAMC,EAAQD,EAAME,OAAOC,YAAYC,cACvC,EAAKC,UAAS,SAAAC,GAAS,sBAElBL,EAAQK,EAAUL,GAAS,O,wDAKpC,WAGI,OAAOM,OAAOC,OAAOC,KAAKd,OAAOe,QAAO,SAACC,EAAKC,GAAU,OAAOD,EAAMC,IAAQ,K,kCAGjF,WACIC,QAAQC,IAAIL,KAAKd,MAAMC,MACvBiB,QAAQC,IAAIL,KAAKd,MAAMG,KACvBe,QAAQC,IAAIL,KAAKd,MAAMC,KAAOa,KAAKd,MAAMG,KACzC,IAAMiB,EAAaN,KAAKd,MAAMC,KAAOa,KAAKd,MAAMG,IAChD,OAAOkB,KAAKC,MAAM,IAAMR,KAAKd,MAAMC,KAAOmB,K,oBAG9C,WACI,OACI,sBAAKG,UAAU,WAAf,UACI,uDACA,sBAAKA,UAAU,mBAAf,UACI,wBAAQC,KAAK,SAASC,QAASX,KAAKV,YAApC,kBAGA,wBAAQoB,KAAK,SAASC,QAASX,KAAKV,YAApC,qBAGA,wBAAQoB,KAAK,SAASC,QAASX,KAAKV,YAApC,oBAIJ,qBAAKmB,UAAU,aAAf,SACI,qBAAIA,UAAU,OAAd,UACI,qBAAIA,UAAU,OAAd,kBAEI,+BAAOT,KAAKd,MAAMC,UAEtB,qBAAIsB,UAAU,OAAd,qBAEI,+BAAOT,KAAKd,MAAME,aAEtB,qBAAIqB,UAAU,OAAd,iBAEI,+BAAOT,KAAKd,MAAMG,SAEtB,qBAAIoB,UAAU,OAAd,mBAEI,+BAAOT,KAAKY,0BAEhB,qBAAIH,UAAU,OAAd,+BAEI,iCAAOT,KAAKa,uBAAZ,sB,GAjELC,aA0ER7B,IC1EA,SAAS8B,IACpB,OACI,qBAAKN,UAAU,YAAf,SACI,cAAC,EAAD,MCCZO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.8a22b761.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Feedback extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    addFeedback = event => {\n        const value = event.target.textContent.toLowerCase();\n        this.setState(prevState => ({\n            // ...prevState,\n            [value]: prevState[value] + 1,\n        }));\n        // this.countTotalFeedback();\n    };\n\n    countTotalFeedback() {\n        // console.log(Object.values(this.state))\n        // console.log(Object.values(this.state).reduce((acc, val) => { return acc + val; }, 0))\n        return Object.values(this.state).reduce((acc, val) => { return acc + val; }, 0)\n    }\n\n    countPositivePercent() {\n        console.log(this.state.good)\n        console.log(this.state.bad)\n        console.log(this.state.good + this.state.bad)\n        const goodAndBad = this.state.good + this.state.bad;\n        return Math.round(100 * this.state.good / goodAndBad)\n    }\n\n    render() {\n        return (\n            <div className=\"Feedback\">\n                <h3>Please leave feedback</h3>\n                <div className=\"buttonsContainer\">\n                    <button type=\"button\" onClick={this.addFeedback}>\n                        Good\n                    </button>\n                    <button type=\"button\" onClick={this.addFeedback}>\n                        Neutral\n                    </button>\n                    <button type=\"button\" onClick={this.addFeedback}>\n                        Bad\n                    </button>\n                </div>\n                <div className=\"Statistics\">\n                    <ul className=\"list\">\n                        <li className=\"item\">\n                            Good:\n                            <span>{this.state.good}</span>\n                        </li>\n                        <li className=\"item\">\n                            Neutral:\n                            <span>{this.state.neutral}</span>\n                        </li>\n                        <li className=\"item\">\n                            Bad:\n                            <span>{this.state.bad}</span>\n                        </li>\n                        <li className=\"item\">\n                            Total:\n                            <span>{this.countTotalFeedback()}</span>\n                        </li >\n                        <li className=\"item\">\n                            Positive feedback:\n                            <span>{this.countPositivePercent()}%</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Feedback;\n","import Feedback from './components/feedback/feedback';\n\nexport default function App() {\n    return (\n        <div className=\"container\">\n            <Feedback />\n        </div>\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}