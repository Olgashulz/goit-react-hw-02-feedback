{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/Section/Section.module.css"],"names":["Section","title","children","className","styles","container","Statistics","good","neutral","bad","total","positivePercentage","Button","textBtn","onLeaveFeedback","type","onClick","event","FeedbackOptions","options","map","App","state","addFeedback","value","target","textContent","toLowerCase","setState","prevState","Object","values","this","reduce","acc","val","goodAndBad","Math","round","isVisible","el","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAIe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,sBAAKC,UAAWC,IAAOC,UAAvB,UACKJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,KCLE,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,sBAAKR,UAAU,aAAf,UACI,oBAAIA,UAAU,QAAd,0BACA,qBAAIA,UAAU,OAAd,UACI,qBAAIA,UAAU,OAAd,kBAEI,+BAAOI,OAEX,qBAAIJ,UAAU,OAAd,qBAEI,+BAAOK,OAEX,qBAAIL,UAAU,OAAd,iBAEI,+BAAOM,OAEX,qBAAIN,UAAU,OAAd,mBAEI,+BAAOO,OAEX,qBAAIP,UAAU,OAAd,+BAEI,iCAAOQ,EAAP,gBCvBL,SAASC,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACtC,OACI,wBACIC,KAAK,SACLC,QAAS,SAACC,GAAD,OAAWH,EAAgBG,IAFxC,SAGKJ,ICJE,SAASK,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASL,EAAmB,EAAnBA,gBAE/C,OACIK,EAAQC,KAAI,SAAAP,GAAO,OACf,cAACD,EAAD,CAEIC,QAASA,EACTC,gBAAiBA,GAFZD,M,ICHfQ,E,4MACFC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTc,YAAc,SAAAN,GACV,IAAMO,EAAQP,EAAMQ,OAAOC,YAAYC,cACvC,EAAKC,UAAS,SAAAC,GAAS,sBAClBL,EAAQK,EAAUL,GAAS,O,wDAIpC,WACI,OAAOM,OAAOC,OAAOC,KAAKV,OAAOW,QAAO,SAACC,EAAKC,GAC1C,OAAOD,EAAMC,IACd,K,6CAGP,WACI,IAAMC,EAAaJ,KAAKV,MAAMf,KAAOyB,KAAKV,MAAMb,IAChD,OAAO4B,KAAKC,MAAO,IAAMN,KAAKV,MAAMf,KAAQ6B,K,oBAIhD,WACI,MAA+BJ,KAAKV,MAA5Bf,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACb+B,IAAYT,OAAOC,OAAOC,KAAKV,OAAOW,QAAO,SAACC,EAAKM,GAAN,OAAaA,EAAKN,EAAM,EAAIA,IAAK,GAGpF,OACI,eAAClC,EAAD,CACIC,MAAO,wBADX,UAEI,cAACiB,EAAD,CACIC,QAASW,OAAOW,KAAKT,KAAKV,OAC1BR,gBAAiBkB,KAAKT,cAGzBgB,GAAa,cAACjC,EAAD,CACVC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKU,qBACZ/B,mBAAoBqB,KAAKW,2C,GA5C3BC,aAoDHvB,ICpDfwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,0B","file":"static/js/main.d41e0eec.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div className={styles.container}>\r\n            {title && <h3 className={styles.title}>{title}</h3>}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <div className=\"Statistics\">\r\n            <h3 className=\"title\"> Statistics </h3>\r\n            <ul className=\"list\">\r\n                <li className=\"item\">\r\n                    Good:\r\n                    <span>{good}</span>\r\n                </li>\r\n                <li className=\"item\">\r\n                    Neutral:\r\n                    <span>{neutral}</span>\r\n                </li>\r\n                <li className=\"item\">\r\n                    Bad:\r\n                    <span>{bad}</span>\r\n                </li>\r\n                <li className=\"item\">\r\n                    Total:\r\n                    <span>{total}</span>\r\n                </li>\r\n                <li className=\"item\">\r\n                    Positive feedback:\r\n                    <span>{positivePercentage}%</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ textBtn, onLeaveFeedback }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            onClick={(event) => onLeaveFeedback(event)}>\r\n            {textBtn}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    textBtn: PropTypes.string.isRequired,\r\n    onLeaveFeedback: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    // console.log(onLeaveFeedback)\r\n    return (\r\n        options.map(textBtn => (\r\n            <Button\r\n                key={textBtn}\r\n                textBtn={textBtn}\r\n                onLeaveFeedback={onLeaveFeedback} />\r\n        )\r\n        ))\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}","// import Feedback from './components/feedback/feedback';\nimport React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions'\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    addFeedback = event => {\n        const value = event.target.textContent.toLowerCase();\n        this.setState(prevState => ({\n            [value]: prevState[value] + 1,\n        }));\n    };\n\n    countTotalFeedback() {\n        return Object.values(this.state).reduce((acc, val) => {\n            return acc + val;\n        }, 0);\n    }\n\n    countPositiveFeedbackPercentage() {\n        const goodAndBad = this.state.good + this.state.bad;\n        return Math.round((100 * this.state.good) / goodAndBad);\n        // return ((this.state.good / this.countTotalFeedback()) * 100) - Если учитывать нейтральные отзывы.\n    }\n\n    render() {\n        const { good, bad, neutral } = this.state;\n        const isVisible = Object.values(this.state).reduce((acc, el) => el ? acc + 1 : acc, 0) ? true : false;\n        // console.log(isVisible)\n\n        return (\n            <Section\n                title={'Please leave feedback'}>\n                <FeedbackOptions\n                    options={Object.keys(this.state)}\n                    onLeaveFeedback={this.addFeedback}\n                />\n\n                {isVisible && <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={this.countTotalFeedback()}\n                    positivePercentage={this.countPositiveFeedbackPercentage()}\n                />}\n            </Section>\n\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1hrPi\",\"title\":\"Section_title__3njc9\"};"],"sourceRoot":""}